# ----------------------- #
# Serverless Service Name #
# ----------------------- #

service: aws-node-ec2-alarm-project

# ------------------------- #
# Framework Version Setting #
# ------------------------- #

frameworkVersion: '^2.6.0'

# ---------------------- #
# Plugins For Serverless #
# ---------------------- #

plugins:
  - serverless-cloudformation-sub-variables
  - serverless-plugin-lambda-dead-letter

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-2
  lambdaHashingVersion: 20201221
  tags:
    Company: DevOpsGroup
    Environment: ${opt:stage}
    Region: ${aws:region}
  iam:
    role: LambdaIAMRole                                                  

# ------------------------- #
# Lambda Function Resources #
# ------------------------- #

functions:
  subscriber:
    name: 'EC2-recovery-lambda-subscriber-function-${aws:accountId}-${aws:region}'
    handler: "functions/subscriber"
    memorySize: 512
    environment:
          TAGS: '[{"Key": "EC2_Auto_Recovery", "Value": "Enabled"}]'
          SNS_TOPIC_ARN: !Ref EC2DatadogSnsTopic
          REGION: ${aws:region}
    events:
        - cloudwatchEvent:
            description: 'CloudWatch Event triggered on EC2 Instance running state'
            event:
              source:
                - 'aws.ec2'
              detail:
                state:
                  - running
                  - terminated
                type:
                  - 'EC2 Instance State-change Notification'
            enabled: true
# Deadletter plugin currently broken in serverless 2.x fix currently open at: https://github.com/gmetzker/serverless-plugin-lambda-dead-letter/issues/46
    # deadLetter:
    #   targetArn:
    #     GetResourceArn: !Ref EC2DatadogSnsTopic

  resolver:
    name: 'EC2-recovery-lambda-resolver-function-${aws:accountId}-${aws:region}'
    handler: "functions/resolver"
    memorySize: 512
    environment:
          SNS_TOPIC_ARN: !Ref EC2DatadogSnsTopic
    events:
      - sns:
          arn: !Ref EC2DatadogSnsTopic
          topicName: 'Datadog-EC2-SNS-Topic-${aws:accountId}-${aws:region}'
# Deadletter plugin currently broken in serverless 2.x fix currently open at: https://github.com/gmetzker/serverless-plugin-lambda-dead-letter/issues/46
    # deadLetter:
    #   targetArn:
    #     GetResourceArn: !Ref EC2DatadogSnsTopic

# ------------------------ #
# CloudFormation Resources #
# ------------------------ #

resources:
  Resources:
    LambdaIAMRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: 'EC2-Recovery-Lambda-execution-role-${aws:accountId}-${aws:region}'
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: 
                - sts:AssumeRole
            - Effect: Allow
              Principal:
                Service:
                  - cloudwatch.amazonaws.com
              Action:
                - sts:AssumeRole     
            - Effect: Allow
              Principal:
                Service:
                  - events.amazonaws.com
              Action:
                - sts:AssumeRole              
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        Policies:
          - PolicyName: EC2Recovery-Lambda-Execution-policy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    - logs:DescribeLogGroups
                  Resource: 'arn:aws:logs:${aws:region}:${aws:accountId}:log-group:*'
                - Effect: Allow
                  Action:
                    - logs:PutLogEvents
                  Resource: 'arn:aws:logs:${aws:region}:${aws:accountId}:log-group:*:log-stream:*'
                - Effect: Allow
                  Action:
                    - lambda:InvokeFunction
                    - lambda:InvokeAsync
                  Resource: "*"
                - Effect: Allow
                  Action:
                    - ec2:CreateTags
                  Resource: 'arn:aws:ec2:${aws:region}:${aws:accountId}:instance/*'
                - Effect: Allow
                  Action:
                    - ec2:DescribeInstances
                    - ec2:DescribeImages
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - cloudwatch:DescribeAlarms
                    - cloudwatch:DeleteAlarms
                    - cloudwatch:PutMetricAlarm
                    - cloudwatch:PutMetricData
                  Resource: 'arn:aws:cloudwatch:${aws:region}:${aws:accountId}:alarm:AutoAlarm-*'
                - Effect: Allow
                  Action:
                    - ec2:CreateTags
                  Resource: 'arn:aws:ec2:${aws:region}:${aws:accountId}:instance/*'
                - Effect: Allow
                  Action:
                    -  ec2:StartInstances
                    -  ec2:StopInstances
                  Condition:
                    StringEquals:
                      aws:ResourceTag/EC2_Auto_Recovery": 'Enabled'
                  Resource: 'arn:aws:ec2:${aws:region}:${aws:accountId}:instance/*'
                - Effect: Allow
                  Action:
                    - ec2:DescribeInstances
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - sns:publish
                  Resource: !Ref EC2DatadogSnsTopic
    EC2DatadogSnsTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: 'Datadog-EC2-SNS-Topic-${aws:accountId}-${aws:region}'
        DisplayName: EC2 recovery alarm activation pipeline
    EC2DataDogSnsSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: event-1i8bqltl@dtdg.co
        Protocol: email-json
        TopicArn: !Ref EC2DatadogSnsTopic
# Deadletter plugin currently broken in serverless 2.x fix currently open at: https://github.com/gmetzker/serverless-plugin-lambda-dead-letter/issues/46
    # EC2SubscriberDLQ:
    #   Type: AWS::SQS::Queue
    #   Properties:
    #     QueueName: 'EC2-alarm-subscriber-DLQ-${aws:accountId}-${aws:region}'
# Deadletter plugin currently broken in serverless 2.x fix currently open at: https://github.com/gmetzker/serverless-plugin-lambda-dead-letter/issues/46
    # EC2ResolverDLQ:
    #   Type: AWS::SQS::Queue
    #   Properties:
    #     QueueName: 'EC2-alarm-resolver-DLQ-${aws:accountId}-${aws:region}'

